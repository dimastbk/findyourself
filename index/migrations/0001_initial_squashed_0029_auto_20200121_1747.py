# Generated by Django 3.0.2 on 2020-01-23 01:42

from django.contrib.postgres.operations import CreateExtension
import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import imagefield.fields
import taggit.managers


class Migration(migrations.Migration):

    replaces = [('index', '0001_initial'), ('index', '0002_place_tags'), ('index', '0003_auto_20191211_1657'), ('index', '0004_auto_20191211_1659'), ('index', '0005_auto_20191211_1707'), ('index', '0006_district_region'), ('index', '0007_auto_20191212_1406'), ('index', '0008_auto_20191212_1539'), ('index', '0009_auto_20191212_1711'), ('index', '0010_auto_20191213_1055'), ('index', '0011_auto_20191213_1728'), ('index', '0012_type_title_pl'), ('index', '0013_place_create_date'), ('index', '0014_route'), ('index', '0015_auto_20191217_1745'), ('index', '0016_auto_20191218_1214'), ('index', '0017_auto_20191218_1234'), ('index', '0018_auto_20191218_1236'), ('index', '0017_auto_20191218_1237'), ('index', '0018_type_icon'), ('index', '0019_city_type_place'), ('index', '0020_remove_city_type_place'), ('index', '0021_auto_20200115_1154'), ('index', '0022_place_ig_id'), ('index', '0023_auto_20200117_1309'), ('index', '0024_remove_route_ls'), ('index', '0025_auto_20200117_1710'), ('index', '0026_auto_20200120_1152'), ('index', '0027_auto_20200120_1242'), ('index', '0028_auto_20200120_1555'), ('index', '0029_auto_20200121_1747')]

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        CreateExtension('postgis'),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('wd_id', models.CharField(max_length=10)),
                ('coord', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326, verbose_name='Координаты')),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
            },
        ),
        migrations.AlterModelOptions(
            name='city',
            options={'ordering': ['title'], 'verbose_name': 'Город', 'verbose_name_plural': 'Города'},
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('wd_id', models.CharField(max_length=10)),
                ('capital', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='index.City', verbose_name='Центр')),
            ],
            options={
                'verbose_name': 'Регион',
                'verbose_name_plural': 'Регионы',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('wd_id', models.CharField(max_length=10)),
                ('capital', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='index.City', verbose_name='Центр')),
                ('region', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='index.Region', verbose_name='Регион')),
            ],
            options={
                'verbose_name': 'Район',
                'verbose_name_plural': 'Районы',
                'ordering': ['title'],
            },
        ),
        migrations.AddField(
            model_name='city',
            name='ae1',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='index.District', verbose_name='Район'),
        ),
        migrations.AddField(
            model_name='city',
            name='ae2',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='index.Region', verbose_name='Регион'),
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('title_pl', models.CharField(default='', max_length=200, verbose_name='Множественное название')),
                ('icon', models.CharField(default='', max_length=200, verbose_name='Название иконки')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('text', models.TextField(verbose_name='Описание')),
                ('image', imagefield.fields.ImageField(blank=True, height_field='image_height', upload_to='', verbose_name='Изображение', width_field='image_width')),
                ('wd_id', models.CharField(blank=True, default='', max_length=10)),
                ('type_place', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='index.Type', verbose_name='Категория')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('district', models.ManyToManyField(to='index.District', verbose_name='Район')),
                ('is_published', models.BooleanField(default=False, verbose_name='Опубликовано')),
                ('image_height', models.PositiveIntegerField(blank=True, editable=False, null=True)),
                ('image_ppoi', imagefield.fields.PPOIField(default='0.5x0.5', max_length=20)),
                ('image_width', models.PositiveIntegerField(blank=True, editable=False, null=True)),
                ('coord', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326, verbose_name='Координаты')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='index.City', verbose_name='Населённый пункт')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='index.Region', verbose_name='Регион')),
                ('create_date', models.DateField(auto_now_add=True, default=django.utils.timezone.now)),
                ('ig_id', models.CharField(blank=True, max_length=20, verbose_name='Локация в IG')),
                ('title_alt', models.CharField(blank=True, help_text='Например, Фалаза для горы Литовка.', max_length=200, verbose_name='Альтернативное название')),
            ],
            options={
                'verbose_name': 'Место',
                'verbose_name_plural': 'Места',
            },
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rt_length', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Длина')),
                ('rt_from', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='route_city', to='index.City', verbose_name='Начальный пункт')),
                ('rt_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='route_place', to='index.Place', verbose_name='Конечный пункт')),
                ('rt_type', models.CharField(blank=True, choices=[('w', 'Водный'), ('a', 'Автомобильный'), ('h', 'Пеший')], default='h', max_length=1, verbose_name='Тип маршрута')),
                ('rt_title', models.CharField(max_length=200, verbose_name='Название')),
                ('ls', django.contrib.gis.db.models.fields.LineStringField(blank=True, dim=3, null=True, srid=4326, verbose_name='Маршрут')),
                ('ls2', django.contrib.gis.db.models.fields.LineStringField(blank=True, null=True, srid=4326, verbose_name='2D-маршрут')),
                ('rt_el_gain', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Набор высоты')),
                ('rt_el_loss', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Потеря высоты')),
                ('rt_is_gpx', models.BooleanField(default=False, verbose_name='GPX?')),
                ('rt_max_el', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Максимальная высота')),
                ('rt_min_el', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Минимальная высота')),
            ],
            options={
                'verbose_name': 'Маршрут',
                'verbose_name_plural': 'Маршруты',
            },
        ),
        migrations.AlterField(
            model_name='place',
            name='city',
            field=models.ForeignKey(blank=True, help_text='Ближайший населённый пункт с которого начинаются основные маршруты.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='index.City', verbose_name='Населённый пункт'),
        ),
        migrations.AlterField(
            model_name='place',
            name='ig_id',
            field=models.CharField(blank=True, help_text='Например, 771936715 для <a href="https://www.instagram.com/explore/locations/771936715/">гора Ольховая</a>.', max_length=20, verbose_name='Локация в IG'),
        ),
        migrations.AlterField(
            model_name='place',
            name='wd_id',
            field=models.CharField(blank=True, help_text='Например, Q4317189 для <a href="https://www.wikidata.org/wiki/Q4317189">водопад Неожиданный</a>.', max_length=10),
        ),
        migrations.AlterField(
            model_name='place',
            name='ig_id',
            field=models.CharField(blank=True, help_text='Например, 771936715 для <a href="https://www.instagram.com/explore/locations/771936715/">гора Ольховая</a>.', max_length=20, verbose_name='Локация в Инстаграме'),
        ),
        migrations.AlterField(
            model_name='place',
            name='title_alt',
            field=models.CharField(blank=True, help_text='Другое распространённое название, иногда официальное название на картах. Например, Литовка для горы Фалаза.', max_length=200, verbose_name='Альтернативное название'),
        ),
        migrations.AlterField(
            model_name='place',
            name='wd_id',
            field=models.CharField(blank=True, help_text='Например, Q4317189 для <a href="https://www.wikidata.org/wiki/Q4317189">водопад Неожиданный</a>.', max_length=10, validators=[django.core.validators.RegexValidator(regex='^Q([0-9]{1,9})$')], verbose_name='ID на Wikidata'),
        ),
    ]
